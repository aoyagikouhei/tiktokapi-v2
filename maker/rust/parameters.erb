<%
def make_query_value(it)
  if it[:alter].present?
    return ".clone()"
  end
  case it[:type]
  when "enum" then
    ".iter().join(\",\")"
  when "string" then
    ""
  else
    ".to_string()"
  end
end

%><% if queries.present? %>
let mut query_parameters = vec![];<% end %><% required_queries.each do |it| %>
query_parameters.push(("<%= it[:name] %>", self.<%= it[:name].make_name.make_field %><%= make_query_value(it) %>));<% end %><% non_required_queries.each do |it| %>
if let Some(<%= it[:name].make_name.make_field %>) = self.<%= it[:name].make_name.make_field %> {
    query_parameters.push(("<%= it[:name] %>", <%= it[:name].make_name.make_field %><%= make_query_value(it) %>));
}<% end %>